#
# SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '3'

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "443:443"
    volumes:
      - ../keys/tls:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      demo-net:
        aliases:
          - testnet.trustbloc.local
          - stakeholder-one.trustbloc.local
          - sidetree-mock.trustbloc.local
          - issuer-vcs.trustbloc.local
          - rp-vcs.trustbloc.local
          - governance-vcs.trustbloc.local
          - hydra.trustbloc.local
          - oathkeeper-proxy.trustbloc.local
          - edv-oathkeeper-proxy.trustbloc.local
          - edv.trustbloc.local
          - kms.trustbloc.local
          - uni-resolver-web.trustbloc.local
          - uni-registrar-web.trustbloc.local
          - did-resolver.trustbloc.local
          - consent-login.trustbloc.local
          - uscis-rp.trustbloc.local
          - cbp-rp.trustbloc.local
          - router.trustbloc.local
          - issuer.trustbloc.local
          - issuer-adapter.trustbloc.local
          - rp.trustbloc.local
          - rp-adapter.trustbloc.local
          - rp-adapter-hydra.trustbloc.local
          - peer0-org1.trustbloc.local
          - peer1-org1.trustbloc.local
          - peer0-org2.trustbloc.local
          - peer1-org2.trustbloc.local
          - peer0-org3.trustbloc.local
          - peer1-org3.trustbloc.local
          - org1.trustbloc.local
          - org2.trustbloc.local
          - org3.trustbloc.local
          - auth-rest.trustbloc.local
          - auth-rest-hydra.trustbloc.local
          - authz-kms.trustbloc.local
          - ops-kms.trustbloc.local
          - myagent.trustbloc.local
          - myagent-support.trustbloc.local
          - oathkeeper-auth-keyserver.trustbloc.local
          - oathkeeper-ops-keyserver.trustbloc.local
          - did-method.trustbloc.local
          - vault.trustbloc.local
          - csh.trustbloc.local
          - vault-kms.trustbloc.local

  shared.couchdb:
    container_name: shared.couchdb
    image: ${COUCHDB_FIXTURE_IMAGE}:${COUCHDB_FIXTURE_TAG}
    ports:
      - 5984:5984
    environment:
      - DB_URL=http://localhost:5984/member_db
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    volumes:
      - ../couchDB/config.ini:/opt/couchdb/etc/local.d/config.ini
    networks:
      - demo-net


  mysql:
    container_name: mysql
    image: mysql:8.0.20
    ports:
      - 3306:3306
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - ../scripts/mysql:/docker-entrypoint-initdb.d
    networks:
      - demo-net


networks:
  demo-net:
    driver: bridge
